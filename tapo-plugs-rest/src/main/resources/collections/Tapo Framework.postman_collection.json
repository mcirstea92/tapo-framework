{
	"info": {
		"_postman_id": "d9116aca-b139-4b1f-8534-f851fc19964c",
		"name": "Tapo Framework",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7568759"
	},
	"item": [
		{
			"name": "TapoP100",
			"item": [
				{
					"name": "Login request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"sessionCookie\", pm.response.json().sessionCookie);",
									"",
									"pm.test(\"Response sessionCookie is not null\", function () {",
									"    pm.expect(pm.response.json().sessionCookie).to.not.be.null;",
									"});",
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.sessionCookie).to.exist.and.to.be.a('string');",
									"  pm.expect(responseData.deviceProtocol).to.exist.and.to.be.a('string');",
									"});",
									"",
									"",
									"pm.test(\"sessionCookie is not an empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.sessionCookie).to.exist.and.to.be.a('string').and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"deviceProtocol should be a string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.deviceProtocol).to.be.a('string');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ip\": \"{{tapoAddress}}\",\r\n    \"username\": \"{{email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"protocol\": \"{{protocol}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tapo/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tapo",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get device info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is not empty\", function () {",
									"    pm.expect(pm.response.text()).to.not.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Cookie",
								"value": "{{sessionCookie}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tapo/plug/deviceInfo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tapo",
								"plug",
								"deviceInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get device energy info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is not empty\", function () {",
									"    pm.expect(pm.response.text()).to.not.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Cookie",
								"value": "{{sessionCookie}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tapo/plug/energyInfo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tapo",
								"plug",
								"energyInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalidate session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204 - session is invalidated\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Cookie",
								"value": "{{sessionCookie}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tapo/device/invalidate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tapo",
								"device",
								"invalidate"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TapoP110",
			"item": [
				{
					"name": "Login request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"sessionCookie\", pm.response.json().sessionCookie);",
									"",
									"pm.test(\"Response sessionCookie is not null\", function () {",
									"    pm.expect(pm.response.json().sessionCookie).to.not.be.null;",
									"});",
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.sessionCookie).to.exist.and.to.be.a('string');",
									"  pm.expect(responseData.deviceProtocol).to.exist.and.to.be.a('string');",
									"});",
									"",
									"",
									"pm.test(\"sessionCookie is not an empty string\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.sessionCookie).to.exist.and.to.be.a('string').and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"deviceProtocol should be a string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.deviceProtocol).to.be.a('string');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ip\": \"{{tapoAddress}}\",\r\n    \"username\": \"{{email}}\",\r\n    \"password\": \"{{password}}\",\r\n    \"protocol\": \"{{protocol}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tapo/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tapo",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get device info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is not empty\", function () {",
									"    pm.expect(pm.response.text()).to.not.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Cookie",
								"value": "{{sessionCookie}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tapo/plug/deviceInfo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tapo",
								"plug",
								"deviceInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get device energy info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response body is not empty\", function () {",
									"    pm.expect(pm.response.text()).to.not.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Cookie",
								"value": "{{sessionCookie}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tapo/plug/energyInfo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tapo",
								"plug",
								"energyInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalidate session",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204 - session is invalidated\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Cookie",
								"value": "{{sessionCookie}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tapo/device/invalidate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tapo",
								"device",
								"invalidate"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}